{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AL Qadisya\\\\react-projects\\\\react proj-1\\\\01-starting-setup\\\\src\\\\components\\\\ExpensesChart.js\";\nimport React from \"react\";\nimport Chart from \"./Chart/Chart\";\nimport ChartBar from \"./Chart/chartBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpensesChart = () => {\n  const chartDataPoints = [{\n    label: 'jan',\n    value: 0\n  }, {\n    label: 'feb',\n    value: 0\n  }, {\n    label: 'mars',\n    value: 0\n  }, {\n    label: 'apr',\n    value: 0\n  }, {\n    label: 'may',\n    value: 0\n  }, {\n    label: 'jun',\n    value: 0\n  }, {\n    label: 'july',\n    value: 0\n  }, {\n    label: 'aug',\n    value: 0\n  }, {\n    label: 'sep',\n    value: 0\n  }, {\n    label: 'oct',\n    value: 0\n  }, {\n    label: 'nov',\n    value: 0\n  }, {\n    label: 'dec',\n    value: 0\n  }];\n\n  for (const expense in Props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ExpensesChart;\nexport default ExpenseChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["React","Chart","ChartBar","ExpensesChart","chartDataPoints","label","value","expense","Props","expenses","expenseMonth","date","getMonth","amount","ExpenseChart"],"sources":["C:/Users/AL Qadisya/react-projects/react proj-1/01-starting-setup/src/components/ExpensesChart.js"],"sourcesContent":["import React from \"react\";\r\nimport Chart from \"./Chart/Chart\";\r\nimport ChartBar from \"./Chart/chartBar\";\r\nconst ExpensesChart=()=>{\r\n\r\n    const chartDataPoints=[\r\n        {label:'jan',value:0},\r\n        {label:'feb',value:0},\r\n        {label:'mars',value:0},\r\n        {label:'apr',value:0},\r\n        {label:'may',value:0},\r\n        {label:'jun',value:0},\r\n        {label:'july',value:0},\r\n        {label:'aug',value:0},\r\n        {label:'sep',value:0},\r\n        {label:'oct',value:0},\r\n        {label:'nov',value:0},\r\n        {label:'dec',value:0},\r\n    ];\r\n    for (const expense in Props.expenses){\r\n        const expenseMonth= expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value +=expense.amount;\r\n\r\n    }\r\n\r\n    return (\r\n    <Chart dataPoints={chartDataPoints}/>\r\n    );\r\n\r\n}\r\nexport default ExpenseChart;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;;;AACA,MAAMC,aAAa,GAAC,MAAI;EAEpB,MAAMC,eAAe,GAAC,CAClB;IAACC,KAAK,EAAC,KAAP;IAAaC,KAAK,EAAC;EAAnB,CADkB,EAElB;IAACD,KAAK,EAAC,KAAP;IAAaC,KAAK,EAAC;EAAnB,CAFkB,EAGlB;IAACD,KAAK,EAAC,MAAP;IAAcC,KAAK,EAAC;EAApB,CAHkB,EAIlB;IAACD,KAAK,EAAC,KAAP;IAAaC,KAAK,EAAC;EAAnB,CAJkB,EAKlB;IAACD,KAAK,EAAC,KAAP;IAAaC,KAAK,EAAC;EAAnB,CALkB,EAMlB;IAACD,KAAK,EAAC,KAAP;IAAaC,KAAK,EAAC;EAAnB,CANkB,EAOlB;IAACD,KAAK,EAAC,MAAP;IAAcC,KAAK,EAAC;EAApB,CAPkB,EAQlB;IAACD,KAAK,EAAC,KAAP;IAAaC,KAAK,EAAC;EAAnB,CARkB,EASlB;IAACD,KAAK,EAAC,KAAP;IAAaC,KAAK,EAAC;EAAnB,CATkB,EAUlB;IAACD,KAAK,EAAC,KAAP;IAAaC,KAAK,EAAC;EAAnB,CAVkB,EAWlB;IAACD,KAAK,EAAC,KAAP;IAAaC,KAAK,EAAC;EAAnB,CAXkB,EAYlB;IAACD,KAAK,EAAC,KAAP;IAAaC,KAAK,EAAC;EAAnB,CAZkB,CAAtB;;EAcA,KAAK,MAAMC,OAAX,IAAsBC,KAAK,CAACC,QAA5B,EAAqC;IACjC,MAAMC,YAAY,GAAEH,OAAO,CAACI,IAAR,CAAaC,QAAb,EAApB;IACAR,eAAe,CAACM,YAAD,CAAf,CAA8BJ,KAA9B,IAAsCC,OAAO,CAACM,MAA9C;EAEH;;EAED,oBACA,QAAC,KAAD;IAAO,UAAU,EAAET;EAAnB;IAAA;IAAA;IAAA;EAAA,QADA;AAIH,CA1BD;;KAAMD,a;AA2BN,eAAeW,YAAf"},"metadata":{},"sourceType":"module"}